src/parser.y:267.41-53: warning: type clash on default action: <typo_d_tipo> != <> [-Wother]
  267 | 				|	BI_REF d_tipo			...
      |                                         ^~~~~~~~~~~~~
src/parser.y:268.41-75: warning: type clash on default action: <typo_d_tipo> != <> [-Wother]
  268 | 				|	expresion_t BI_SUBRANGO expre...
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/parser.y:273.41-123: warning: type clash on default action: <typo_d_tipo> != <> [-Wother]
  273 | 				|	BI_TABLA BI_INI_ARRAY expresi...
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/parser.y:507.41-50: warning: type clash on default action: <exp> != <> [-Wother]
  507 | 				|	funcion_ll
      |                                         ^~~~~~~~~~
src/parser.y: warning: 18 shift/reduce conflicts [-Wconflicts-sr]
src/parser.y: warning: 60 reduce/reduce conflicts [-Wconflicts-rr]
src/parser.y: note: rerun with option '-Wcounterexamples' to generate conflict counterexamples
In file included from src/scanner.l:11:
src/parser.y:30:2: error: unknown type name ‘Data_type’
   30 |  Data_type data_type;
      |  ^~~~~~~~~
src/parser.y:31:2: error: unknown type name ‘Exp_a_b’
   31 |  Exp_a_b *exp;
      |  ^~~~~~~
src/parser.y:33:2: error: unknown type name ‘Quad_op_code’
   33 |  Quad_op_code oprel_val;
      |  ^~~~~~~~~~~~
src/parser.y:34:2: error: expected specifier-qualifier-list before ‘%’ token
   34 |  %union {
      |  ^
In file included from src/parser.y:8:
lib/exp_a_b/exp_a_b.h:18:6: error: conflicting types for ‘set_type’
   18 | void set_type( Exp_a_b *exp, Expression_type type );
      |      ^~~~~~~~
In file included from src/parser.y:6:
lib/symboltable/symbol_table.h:91:5: note: previous declaration of ‘set_type’ was here
   91 | int set_type(Symbol *table[], char *name, Data_type type);
      |     ^~~~~~~~
In file included from src/parser.y:8:
lib/exp_a_b/exp_a_b.h:20:17: error: conflicting types for ‘get_type’
   20 | Expression_type get_type( Exp_a_b *exp );
      |                 ^~~~~~~~
In file included from src/parser.y:6:
lib/symboltable/symbol_table.h:89:11: note: previous declaration of ‘get_type’ was here
   89 | Data_type get_type(Symbol *table[], char *name);
      |           ^~~~~~~~
src/parser.y:10:11: fatal error: ../lib/util.h: No such file or directory
   10 |  #include "../lib/util.h"
      |           ^~~~~~~~~~~~~~~
compilation terminated.
lib/symboltable/symbol_table.c: In function ‘set_attr’:
lib/symboltable/symbol_table.c:139:14: error: incompatible types when assigning to type ‘Data_type’ {aka ‘enum <anonymous>’} from type ‘char *’
  139 |    s->type = (char*) calloc( strlen( value ), sizeof( char ) );
      |              ^
lib/symboltable/symbol_table.c:140:13: error: incompatible type for argument 1 of ‘strcpy’
  140 |    strcpy( s->type, value );
      |            ~^~~~~~
      |             |
      |             Data_type {aka enum <anonymous>}
In file included from lib/symboltable/symbol_table.c:3:
/usr/include/string.h:122:14: note: expected ‘char * restrict’ but argument is of type ‘Data_type’ {aka ‘enum <anonymous>’}
  122 | extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
      |              ^~~~~~
lib/symboltable/symbol_table.c:145:13: error: incompatible type for argument 1 of ‘strcpy’
  145 |    strcpy( s->type, value );
      |            ~^~~~~~
      |             |
      |             Data_type {aka enum <anonymous>}
In file included from lib/symboltable/symbol_table.c:3:
/usr/include/string.h:122:14: note: expected ‘char * restrict’ but argument is of type ‘Data_type’ {aka ‘enum <anonymous>’}
  122 | extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
      |              ^~~~~~
lib/symboltable/symbol_table.c: In function ‘get_attr’:
lib/symboltable/symbol_table.c:168:12: error: incompatible types when returning type ‘Data_type’ {aka ‘enum <anonymous>’} but ‘char *’ was expected
  168 |    return s->type;
      |           ~^~~~~~
lib/stack/stack.c: In function ‘apilar’:
lib/stack/stack.c:28:2: error: unknown type name ‘celdaPila’
   28 |  celdaPila *nuevo;
      |  ^~~~~~~~~
lib/stack/stack.c:29:9: error: ‘celdaPila’ undeclared (first use in this function)
   29 |  nuevo=(celdaPila*)malloc(sizeof(celdaPila));
      |         ^~~~~~~~~
lib/stack/stack.c:29:9: note: each undeclared identifier is reported only once for each function it appears in
lib/stack/stack.c:29:19: error: expected expression before ‘)’ token
   29 |  nuevo=(celdaPila*)malloc(sizeof(celdaPila));
      |                   ^
lib/stack/stack.c:30:7: error: request for member ‘elem’ in something not a structure or union
   30 |  nuevo->elem=elemento;
      |       ^~
lib/stack/stack.c:31:7: error: request for member ‘sig’ in something not a structure or union
   31 |  nuevo->sig = *p;
      |       ^~
lib/stack/stack.c:32:5: warning: assignment to ‘Stack *’ {aka ‘struct _stack *’} from incompatible pointer type ‘int *’ [-Wincompatible-pointer-types]
   32 |  *p = nuevo;
      |     ^
lib/stack/stack.c: In function ‘desapilar’:
lib/stack/stack.c:39:3: error: unknown type name ‘celdaPila’
   39 |   celdaPila *aux;
      |   ^~~~~~~~~
lib/stack/stack.c:40:6: warning: assignment to ‘int *’ from incompatible pointer type ‘Stack *’ {aka ‘struct _stack *’} [-Wincompatible-pointer-types]
   40 |   aux=*p;
      |      ^
In file included from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/exp_a_b.h:18:6: error: conflicting types for ‘set_type’
   18 | void set_type( Exp_a_b *exp, Expression_type type );
      |      ^~~~~~~~
In file included from lib/exp_a_b/exp_a_b.h:4,
                 from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/../symboltable/symbol_table.h:91:5: note: previous declaration of ‘set_type’ was here
   91 | int set_type(Symbol *table[], char *name, Data_type type);
      |     ^~~~~~~~
In file included from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/exp_a_b.h:20:17: error: conflicting types for ‘get_type’
   20 | Expression_type get_type( Exp_a_b *exp );
      |                 ^~~~~~~~
In file included from lib/exp_a_b/exp_a_b.h:4,
                 from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/../symboltable/symbol_table.h:89:11: note: previous declaration of ‘get_type’ was here
   89 | Data_type get_type(Symbol *table[], char *name);
      |           ^~~~~~~~
lib/exp_a_b/exp_a_b.c: In function ‘new_exp_a_b’:
lib/exp_a_b/exp_a_b.c:9:14: error: ‘BOOLEAN’ undeclared (first use in this function); did you mean ‘BOOLEAN_EXP’?
    9 |  if ( type < BOOLEAN || type > UNDEFINED )
      |              ^~~~~~~
      |              BOOLEAN_EXP
lib/exp_a_b/exp_a_b.c:9:14: note: each undeclared identifier is reported only once for each function it appears in
lib/exp_a_b/exp_a_b.c:9:32: error: ‘UNDEFINED’ undeclared (first use in this function); did you mean ‘UNDEFINED_EXP’?
    9 |  if ( type < BOOLEAN || type > UNDEFINED )
      |                                ^~~~~~~~~
      |                                UNDEFINED_EXP
lib/exp_a_b/exp_a_b.c: At top level:
lib/exp_a_b/exp_a_b.c:31:6: error: conflicting types for ‘set_type’
   31 | void set_type( Exp_a_b *exp, Expression_type type ) { exp->type = type; }
      |      ^~~~~~~~
In file included from lib/exp_a_b/exp_a_b.h:4,
                 from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/../symboltable/symbol_table.h:91:5: note: previous declaration of ‘set_type’ was here
   91 | int set_type(Symbol *table[], char *name, Data_type type);
      |     ^~~~~~~~
lib/exp_a_b/exp_a_b.c:33:17: error: conflicting types for ‘get_type’
   33 | Expression_type get_type( Exp_a_b* exp) { return exp->type; }
      |                 ^~~~~~~~
In file included from lib/exp_a_b/exp_a_b.h:4,
                 from lib/exp_a_b/exp_a_b.c:4:
lib/exp_a_b/../symboltable/symbol_table.h:89:11: note: previous declaration of ‘get_type’ was here
   89 | Data_type get_type(Symbol *table[], char *name);
      |           ^~~~~~~~
lib/exp_a_b/exp_a_b.c: In function ‘main’:
lib/exp_a_b/exp_a_b.c:38:30: error: ‘UNDEFINED’ undeclared (first use in this function); did you mean ‘UNDEFINED_EXP’?
   38 |  Exp_a_b *exp = new_exp_a_b( UNDEFINED );
      |                              ^~~~~~~~~
      |                              UNDEFINED_EXP
lib/exp_a_b/exp_a_b.c:41:16: error: ‘BOOLEAN’ undeclared (first use in this function); did you mean ‘BOOLEAN_EXP’?
   41 |  set_type(exp, BOOLEAN);
      |                ^~~~~~~
      |                BOOLEAN_EXP
lib/exp_a_b/exp_a_b.c:44:16: error: ‘ARITHMETIC’ undeclared (first use in this function); did you mean ‘ARITHMETIC_EXP’?
   44 |  set_type(exp, ARITHMETIC);
      |                ^~~~~~~~~~
      |                ARITHMETIC_EXP
make: *** [Makefile:10: all] Error 1
